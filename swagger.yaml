swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "2.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v2
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      responses:
        "200":
          description: User profile retrieved successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile updated successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/account:
    post:
      tags:
        - Accounts and Transactions Module
      summary: All accounts
      description: API for retrieving all user accounts
      security:
        - Bearer: []
      responses:
        "200":
          description: All accounts retrieved successfully
          schema:
            type: array
            items:
              $ref: "#/definitions/AccountResponse"
        "401":
          description: Unauthorized user
        "500":
          description: Internal Server Error
  /account/{accountID}/transactions:
    post:
      tags:
        - Accounts and Transactions Module
      summary: Account transactions
      description: API for retrieving list of transactions associated with an account (simplified info)
      security:
        - Bearer: []
      parameters:
        - in: path
          name: accountID
          description: ID of an account
          required: true
          type: string
      responses:
        "200":
          description: All transactions retrieved successfully
          schema:
            type: array
            items:
              $ref: "#/definitions/BasicTransaction"
        "401":
          description: Unauthorized user
        "404":
          description: Account not found
        "500":
          description: Internal Server Error
  /transaction/{transactionID}:
    get:
      tags:
        - Accounts and Transactions Module
      summary: Retrieve a single transaction
      description: API for retrieving a single transaction with complete details
      security:
        - Bearer: []
      parameters:
        - in: path
          name: transactionID
          description: ID of the transaction
          required: true
          type: string
      responses:
        "200":
          description: Transaction retrieved successfully
          schema:
            $ref: "#/definitions/TransactionComplete"
        "401":
          description: Unauthorized user
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
  /transactions/{transactionID}/category:
    put:
      tags:
        - Accounts and Transactions Module
      summary: Update transaction's category
      description: API for updating category of a transaction
      security:
        - Bearer: []
      parameters:
        - in: path
          name: transactionID
          description: ID of the transaction
          required: true
          type: string
        - in: body
          name: category
          description: Updated transaction category
          required: true
          schema:
            $ref: "#/definitions/TransactionCategory"
      responses:
        "200":
          description: Transaction's category modified successfully
          schema:
            $ref: "#/definitions/TransactionCategory"
        "401":
          description: Unauthorized user
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
  /transactions/{transactionID}/note:
    put:
      tags:
        - Accounts and Transactions Module
      summary: Update transaction's note
      description: API for adding or modifying a note for a transaction
      security:
        - Bearer: []
      parameters:
        - in: path
          name: transactionID
          description: ID of the transaction
          required: true
          type: string
        - in: body
          name: note
          description: Updated transaction note
          required: true
          schema:
            $ref: "#/definitions/TransactionNote"
      responses:
        "200":
          description: Transaction's note modified successfully
          schema:
            $ref: "#/definitions/TransactionNote"
        "401":
          description: Unauthorized user
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
      password:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      userName:
        type: string
  Login:
    properties:
      email:
        type: string
      password:
        type: string
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  AccountResponse:
    type: object
    properties:
      accountID:
        type: string
      accountName:
        type: string
      accountCurrency:
        type: string
      currentBalance:
        type: number
        format: double
  BasicTransaction:
    type: object
    properties:
      transactionID:
        type: string
      date:
        type: string
        format: date-time
      description:
        type: string
      amount:
        type: number
  TransactionComplete:
    type: object
    properties:
      transactionID:
        type: string
      transactionType:
        type: string
      date:
        type: string
        format: date-time
      description:
        type: string
      amount:
        type: number
      balance:
        type: number
        format: double
      category:
        type: string
      note:
        type: string
  TransactionCategory:
    type: object
    properties:
      category:
        type: string
  TransactionNote:
    type: object
    properties:
      note:
        type: string
